{
  "version": 3,
  "sources": ["../../js/main.js"],
  "sourcesContent": ["/**\n *  Personal Site: My humble personal homepage, made with a tiny bit but not much care.\n *  <https://github.com/MattIPv4/Personal-Site/>\n *  Copyright (C) 2023 Matt Cowley (MattIPv4) (me@mattcowley.co.uk)\n *\n *  This program is free software: you can redistribute it and/or modify\n *   it under the terms of the GNU General Public License as published\n *   by the Free Software Foundation, either version 3 of the License, or\n *   (at your option) any later version.\n *  This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *   GNU General Public License for more details.\n *  You should have received a copy of the GNU General Public License\n *   along with this program. If not, please see\n *   <https://github.com/MattIPv4/Personal-Site/blob/master/LICENSE.md> or <http://www.gnu.org/licenses/>.\n */\n\n// Util func for themes to load their styles\nconst loadCSS = style => {\n    const link = document.createElement('link');\n    link.setAttribute('rel', 'stylesheet');\n    link.setAttribute('media', 'screen');\n    link.setAttribute('href', style);\n    document.head.appendChild(link);\n};\n\nconst pickTheme = () => {\n    // Define all themes and pick one\n    const themes = [\n        'crt',\n        'code',\n        'terminal'\n        // 'blue'\n    ];\n    let theme = themes[Math.floor(Math.random() * themes.length)];\n\n    // Allow URL ?theme selection\n    const url = new URL(window.location.href);\n    const param = url.searchParams.get('theme');\n    if (param && themes.indexOf(param.toString().toLowerCase()) !== -1) {\n        theme = param.toString().toLowerCase();\n    }\n\n    // Random theme\n    loadCSS('css/themes/' + theme + '.css');\n};\n\nconst printDetails = () => {\n    window.matchMedia('print').addEventListener('change', evt => {\n        if (evt.matches) {\n            const elms = document.body.querySelectorAll('details:not([open])');\n            for (const e of elms) {\n                e.setAttribute('open', '');\n                e.setAttribute('data-restore', '');\n            }\n        } else {\n            const elms = document.body.querySelectorAll('details[data-restore]');\n            for (const e of elms) {\n                e.removeAttribute('open');\n                e.removeAttribute('data-restore');\n            }\n        }\n    });\n};\n\n// Go!\npickTheme();\nprintDetails();\n"],
  "mappings": "MAmBA,IAAMA,EAAUC,GAAS,CACrB,IAAMC,EAAO,SAAS,cAAc,MAAM,EAC1CA,EAAK,aAAa,MAAO,YAAY,EACrCA,EAAK,aAAa,QAAS,QAAQ,EACnCA,EAAK,aAAa,OAAQD,CAAK,EAC/B,SAAS,KAAK,YAAYC,CAAI,CAClC,EAEMC,EAAY,IAAM,CAEpB,IAAMC,EAAS,CACX,MACA,OACA,UAEJ,EACIC,EAAQD,EAAO,KAAK,MAAM,KAAK,OAAO,EAAIA,EAAO,MAAM,CAAC,EAItDE,EADM,IAAI,IAAI,OAAO,SAAS,IAAI,EACtB,aAAa,IAAI,OAAO,EACtCA,GAASF,EAAO,QAAQE,EAAM,SAAS,EAAE,YAAY,CAAC,IAAM,KAC5DD,EAAQC,EAAM,SAAS,EAAE,YAAY,GAIzCN,EAAQ,cAAgBK,EAAQ,MAAM,CAC1C,EAEME,EAAe,IAAM,CACvB,OAAO,WAAW,OAAO,EAAE,iBAAiB,SAAUC,GAAO,CACzD,GAAIA,EAAI,QAAS,CACb,IAAMC,EAAO,SAAS,KAAK,iBAAiB,qBAAqB,EACjE,QAAWC,KAAKD,EACZC,EAAE,aAAa,OAAQ,EAAE,EACzBA,EAAE,aAAa,eAAgB,EAAE,CAEzC,KAAO,CACH,IAAMD,EAAO,SAAS,KAAK,iBAAiB,uBAAuB,EACnE,QAAWC,KAAKD,EACZC,EAAE,gBAAgB,MAAM,EACxBA,EAAE,gBAAgB,cAAc,CAExC,CACJ,CAAC,CACL,EAGAP,EAAU,EACVI,EAAa",
  "names": ["loadCSS", "style", "link", "pickTheme", "themes", "theme", "param", "printDetails", "evt", "elms", "e"]
}
